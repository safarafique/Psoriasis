# Load necessary libraries for plotting
library(ggplot2)
library(ggrepel)

# Set thresholds for differential expression
logfc_cutoff <- 2
padj_cutoff <- 0.05

# Create Volcano Plot using ggplot2
volcano_plot <- ggplot(top_table, aes(x = logFC, y = negLog10FDR)) +
  geom_point(aes(color = Sig), alpha = 0.9, size = 2) +
  geom_text_repel(aes(label = Label), size = 3.5, max.overlaps = 15, box.padding = 0.5) +
  scale_color_manual(values = c("Up" = "red", "Down" = "blue", "NS" = "gray")) +
  geom_vline(xintercept = c(-logfc_cutoff, logfc_cutoff), linetype = "dashed", color = "darkgray") +
  geom_hline(yintercept = -log10(padj_cutoff), linetype = "dashed", color = "darkgray") +
  labs(
    title = "Volcano Plot of Differential Expression",
    x = "Log2 Fold Change",
    y = "-Log10 Adjusted P-value",
    color = "Gene Regulation"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = "bottom",
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12)
  )

# Save the volcano plot as a PNG file
ggsave("volcano_plot.png", volcano_plot, width = 10, height = 7, dpi = 300)
cat("Volcano plot saved as 'volcano_plot.png'\n")

# Filter significant genes (upregulated and downregulated)
sig_up <- top_table[top_table$logFC > logfc_cutoff & top_table$adj.P.Val < padj_cutoff, ]
sig_down <- top_table[top_table$logFC < -logfc_cutoff & top_table$adj.P.Val < padj_cutoff, ]
sig_all <- rbind(sig_up, sig_down)

# Show summary of significant genes
cat("Number of upregulated genes:", nrow(sig_up), "\n")
cat("Number of downregulated genes:", nrow(sig_down), "\n")
cat("Total significant DEGs:", nrow(sig_all), "\n")

# Save significant genes to CSV files
write.csv(sig_up, "significant_upregulated_genes.csv")
write.csv(sig_down, "significant_downregulated_genes.csv")
write.csv(sig_all, "all_significant_DEGs.csv")
